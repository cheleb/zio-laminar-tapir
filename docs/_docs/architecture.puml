@startuml "architecture"

interface BackendClient {
  +requestZIO()
  +securedRequestZIO()
  +streamRequestZIO()
  +securedStreamRequestZIO()
}

class BackendClientLive {
  - backend: WebSocketStreamBackend
  - interpreter: SttpClientInterpreter
  - streamInterpreter: StreamSttpClientInterpreter
  - config: BackendClientConfig
  --
  -request()
  -streamRequest()
  -securedRequest()
  -securedStreamRequest()
  -tokenOfFail()
  +requestZIO()
  +securedRequestZIO()
  +streamRequestZIO()
  +securedStreamRequestZIO()
}

object BackendClientLive {
  +backendBaseURL
  +url()
  +configuredLayer()
  +configuredLayerOn()
}

class BackendClientConfig {
  +baseUrl: Uri
  +baseUrlAsOption: Option[Uri]
}


interface Session <<WithToken>> {
  +getToken(): Option[WithToken]
  +setToken(token: WithToken): Unit
  +removeToken(): Unit
}

class SessionLive extends Session 

class Storage {
  +get(key: String): Option[String]
  +set(key: String, value: String): Unit
  +remove(key: String): Unit
}


class WithToken {
  +token: String
  +expiration: Long
}

' Relationships
BackendClientLive .up.|> BackendClient

BackendClientLive -left-> BackendClientConfig
Session -right- WithToken
BackendClientLive --> Session
SessionLive --> Storage


@enduml